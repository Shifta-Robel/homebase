//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.3

use sea_orm::entity::prelude::*;
use serde::Serialize;

const DB_URL: &str = "./src/db/shortcuts.sqlite";

#[derive(Clone, Debug, Serialize, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "Shortcut")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: u32,
    pub title: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::commands::Entity")]
    Commands,
    #[sea_orm(has_many = "super::urls::Entity")]
    Urls,
}

impl Model {
    pub fn get_default_path() -> String {
        DB_URL.to_string()
    }
}

impl Related<super::commands::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Commands.def()
    }
}

impl Related<super::urls::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Urls.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
